name: 'create-pull-request'

on:
  pull_request:

jobs:
  pull-request:
    env:
      PR_BRANCH: 'automated/test'
      DEFAULT_BRANCH: '${{ github.event.repository.default_branch }}'

    permissions:
      contents: 'write'
      packages: 'write'
      pull-requests: 'write'
      id-token: 'write'

    runs-on: 'ubuntu-latest'
    steps:
      - id: 'checkout'
        uses: 'actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8' # ratchet:actions/checkout@v3
      # Create a pull request for review
      # Use the GitHub API to ensure commits are signed
      - id: 'create-pull-request'
        uses: 'actions/github-script@98814c53be79b1d30f795b907e553d8679345975' # ratchet:actions/github-script@v6
        with:
          github-token: '${{ github.token }}'
          retries: '3'
          script: |-
            const fs = require("fs/promises");

            const prBranch = `${process.env.PR_BRANCH}_${new Date().getTime()}`;

            // create new branch for pull request
            const { data: ref } = await github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `refs/heads/${prBranch}`,
              sha: process.env.GITHUB_SHA,
            });

            console.log("ref: ", ref);

            const checksumFilePath = `${process.env.GITHUB_WORKSPACE}/README.md`;
            const content = await fs.readFile(checksumFilePath, { encoding: "utf8" });

            // create new git tree from the pr branch
            const { data: tree } = await github.rest.git.createTree({
              owner: context.repo.owner,
              repo: context.repo.repo,
              base_tree: ref.object.sha,
              tree: [
                {
                  path: "test-file.txt",
                  mode: "100644",
                  type: "blob",
                  content: content,
                },
                {
                  path: "test/test-file.txt",
                  mode: "100644",
                  type: "blob",
                  content: content,
                },
              ],
            });

            console.log("tree: ", tree);

            // create a commit from on the git tree
            const { data: commit } = await github.rest.git.createCommit({
              owner: context.repo.owner,
              repo: context.repo.repo,
              message: "chore: [automated] pull request",
              parents: [ref.object.sha],
              tree: tree.sha,
              author: {
                name: "verbanicm-test-app[bot]",
                email: "38917349+verbanicm-test-app[bot]@users.noreply.github.com",
              },
            });

            console.log("commit: ", commit);

            // update the pr branch reference with the new git tree
            await github.rest.git.updateRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: ref.ref,
              sha: commit.sha,
            });

            // create pull request for pr branch
            await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              head: prBranch,
              base: process.env.DEFAULT_BRANCH,
              title: `chore: automated pull request`,
              body: `Adds a test file to test automated pull requests`,
            });
