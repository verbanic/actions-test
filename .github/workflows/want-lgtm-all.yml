name: 'want-lgtm-all'

on:
  pull_request:
    types:
      - assigned
      - unassigned
      - opened
      - edited
      - reopened
      - synchronize
      - ready_for_review
      - review_request
      - review_request_removed
  pull_request_review:
    types:
      - submitted
      - dismissed
      - edited
  workflow_call:
  workflow_dispatch:

permissions:
  pull-requests: 'read'

jobs:
  presubmit:
    runs-on: 'ubuntu-latest'
    steps:
      - name: 'Validate Required Reviewers'
        if: '${{ github.event.pull_request }}'
        uses: 'actions/github-script@d7906e4ad0b1822421a7e6a35d5ca353c962f410' # ratchet:actions/github-script@v6
        with:
          script: |-
            const body = context.payload.pull_request.body || "";
            if (!body.match(/want_lgtm_all[\s]?=[\s]?true/gim)) {
              console.log("PR body does not contain want_lgtm_all");
              return;
            }

            let activeReviewers = await github.rest.pulls.listRequestedReviewers({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
            });

            const usersStillNeedingApproval = activeReviewers.data.users.map(
              (u) => u.login
            );

            console.log(
              "Users still needing approval: " + JSON.stringify(usersStillNeedingApproval)
            );

            const reviews = await github.rest.pulls.listReviews({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
            });

            console.log(
              "Completed reviews: " + JSON.stringify(reviews.data.map((r) => r.user?.login))
            );

            if (usersStillNeedingApproval.length > 0) {
              core.setFailed(
                "Waiting on Approval from " + usersStillNeedingApproval.join(", ")
              );
              return;
            }

            // If all are LGTM, rerun any failed LGTM workflow triggered by original request
            if (context.eventName == "pull_request_review") {
              // Get workflows
              let workflows = await octo.rest.actions.listWorkflowRuns({
                owner: repository.owner,
                repo: repository.repo,
                workflow_id: "want_lgtm_all.yml",
                branch: pr.data.head.ref,
                event: "pull_request",
              });

              console.log(workflows);

              let failedRuns = workflows.data.workflow_runs
                .filter((w) => w.conclusion == "failure")
                .filter((w) => w.pull_requests?.map((p) => p.number).includes(pullRequest))
                .sort((x) => x.run_number);

              if (failedRuns.length > 0) {
                let t = await octo.rest.actions.reRunWorkflow({
                  owner: repository.owner,
                  repo: repository.repo,
                  run_id: failedRuns[0].id,
                });
              }
            }
